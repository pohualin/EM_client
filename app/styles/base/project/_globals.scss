
@include define('project-globals') {

    /* _____ GLOBAL DEFAULTS _____ */

    *,
    :before,
    :after {
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
    }

    html {
        font-size: 100%;
        width: 100%;
        height: 100%;
    }

    body {
        //@include remIt(font-size, 16);
        // line-height: 1.4;
        // background: #fff;
        // font-family: "titillium", Arial, "sans-serif";
        // width: 100%;
        // color: #000;
        // min-height: 100%;
        //@include radial-gradient($color-main-light, $color-main);
    }

    /* _____ HEADINGS _____ */

    h1, .h1 {
    }

    h2, .h2 {
    }

    h3, .h3 {
        color: rgba(81,83,86,0.80);
    }

    h4, .h4 {
        font-weight: 500;
        color: $gray;
        text-transform: uppercase;
    }

    h5, .h5 {
        font-weight: 700;
        color: rgba(81,83,86,0.35);
        text-transform: uppercase;
    }

    a,
    a:visited {
    }

    /* _____ TABLES _____ */

    .table {
        width: 100%;
        max-width: 100%;
        margin-bottom: $line-height-computed;
        // column headings
        > thead > tr > th {
            color: #fff;
            border-color: $brand-primary;
            background: $brand-primary;
            font-size: $font-size-small;
            font-weight: 600;
            text-transform: uppercase;
            padding-top: $table-cell-padding*2;
            padding-bottom: $table-cell-padding*1.8;
        }
        // column cells
        tr > td {
            @include remIt(font-size, 16);
            font-weight: 300;
        }
        // Account for multiple tbody instances
        > tbody + tbody {
            border-top: 0;
        }

        // Nesting
        .table {
            background-color: #fff;
        }
    }

    .table-bordered {
        border-collapse: separate; // necessary for border-radius to work
        //border-radius: $border-radius-base; // Needs to be set on the individual cells because of table heading design treatment
        border: 0; // See note above

        th, td {
            border-left: 0 !important;
            border-right: 0 !important;
            border-top: 0 !important;
        }

        td:first-child {
            border-left: 1px solid $table-border-color !important;
        }

        td:last-child {
            border-right: 1px solid $table-border-color !important;
        }

        th:first-child {
            border-radius: $border-radius-base 0 0 0;
        }

        th:last-child {
            border-radius: 0 $border-radius-base 0 0;
        }

        th:only-child {
            border-radius: $border-radius-base $border-radius-base 0 0;
        }

        tr:last-child td:first-child {
            border-radius: 0 0 0 $border-radius-base;
        }

        tr:last-child td:last-child {
            border-radius: 0 0 $border-radius-base 0;
        }
    }

    /* _____ BUTTONS _____ */
    .btn {
        @include button-size($padding-base-vertical, $padding-base-vertical*2, $font-size-base, $line-height-base, $border-radius-base);
        text-transform: uppercase;
        box-shadow: 2px 2px 0px 0px rgba(110,124,136,0.25);
    }

    .btn-default,
    .btn-grey,
    .btn-link,
    .btn-cancel {
        box-shadow: none;
    }

    .btn-default {
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active,
        .open > &.dropdown-toggle {
            background-color: #e9f7fa;
        }
    }

    .btn-primary {
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active,
        .open > &.dropdown-toggle {
            background-color: #1C94B4;
            border-color: #1C94B4;
        }
    }

    .btn-success {
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active,
        .open > &.dropdown-toggle {
            background-color: #6ABB10;
            border-color: #6ABB10;
        }
    }

    .btn-info {
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active,
        .open > &.dropdown-toggle {
            background-color: #5FB5CB;
            border-color: #5FB5CB;
        }
    }

    .btn-danger {
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active,
        .open > &.dropdown-toggle {
            background-color: #DC6B56;
            border-color: #DC6B56;
        }
    }

    .btn-grey {
        @include button-variant($gray, #ECEDEF, #ECEDEF);
    }

    .btn-icon {
        @include button-variant(#6CC5DC, transparent, transparent);
        border: 0;
        box-shadow: none;
        padding: 0 .25em;
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active,
        .open > &.dropdown-toggle {
            color: #21A4C7;
        }
    }

    .btn-link {
        &:hover,
        &:focus {
            text-decoration: none;
        }
    }

    .btn-cancel {
        @extend .btn-link;
        color: #BBC5CF;
        &:hover,
        &:focus {
            color: #9EA9B5;
            text-decoration: none;
        }
    }

    // Button class that inherits it's color from it's containing element
    .btn-inherit {
        color: inherit;
    }

    .btn-lg {
        // line-height: ensure even-numbered height of button next to large input
        @include button-size($padding-large-vertical, $padding-large-vertical*2, $font-size-base, $line-height-large, $border-radius-base);
    }
    .btn-sm {
        // line-height: ensure proper height of button next to small input
        @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $border-radius-base);
    }
    .btn-xs {
        @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $border-radius-base);
    }

    /* _____ FORMS _____ */
    label {
        font-size: $font-size-small;
        text-transform: uppercase;
    }
    .radio,
    .radio-inline,
    .checkbox,
    .checkbox-inline {
        label {
            font-size: $font-size-base;
            font-weight: normal;
            text-transform: none;
             // For custom checkbox radio alignment...
            padding-left: 0;
            line-height: 25px; // height of custom control
        }
    }
    .form-group {
        margin-bottom: 20px;
    }
    .form-control:focus {
        box-shadow: none !important;
    }
    .has-feedback label ~ .form-control-feedback {
        top: 22px;
        font-size: 24px;
    }
    .has-success .form-control {
        color: $state-success-text;
    }
    .has-warning .form-control {
        color: $state-warning-text;
    }
    .has-error .form-control {
        color: $state-danger-text;
    }
    // Placeholder text
    .form-control::-moz-placeholder {
        font-weight: 300;
        font-style: italic;
    }
    .form-control:-ms-input-placeholder {
        font-weight: 300;
        font-style: italic;
    }
    .form-control::-webkit-input-placeholder {
        font-weight: 300;
        font-style: italic;
    }
    // Custom checkbox and radio buttons
    .radio input[type="radio"],
    .radio-inline input[type="radio"],
    .checkbox input[type="checkbox"],
    .checkbox-inline input[type="checkbox"] {
        margin-left: 0;
    }
    /*
    Position and hide the real checkboxes and radio buttons.
    The inputs are made transparent instead of completely hidden to preserve
    clickability in browsers that don't have clickable labels, like Safari for
    iOS 5 and older.
    */
    input[type="checkbox"],
    input[type="radio"] {
        position: absolute;
        /* Match the image dimensions */
        width: 25px;
        height: 25px;
        /* Reset anything that could peek out or interfere with dimensions */
        overflow: hidden;
        margin: 0;
        padding: 0;
        border: 0;
        outline: 0;
        opacity: 0;
        visibility: hidden;
        cursor: pointer;
    }
    /*
    Insert a pseudo element inside each label and give it a background
    image that will become the custom checkbox or radio button.
    Using inline-block lets you use vertical-align to adjust it vertically
    as needed.
    */
    input[type="checkbox"] + label:before,
    input[type="radio"] + label:before {
        cursor: pointer;
        display: inline-block;
        width: 25px;
        height: 25px;
        margin-right: 10px;
        //background: url('../images/radio-checkbox.png') no-repeat;
        background: #FAFBFB;
        border: 1px solid #C2C2C2;
        content: " ";
        vertical-align: top;
        border-radius: 3px;
        transition: background-color 0.3s ease;
    }
    input[type="radio"] + label:before {
        border-radius: 25px;
    }
    input[type="radio"]:checked + label:before {
        background-color: #6CC5DC;
        border-color: #6CC5DC;
        box-shadow: inset 0px 0px 0px 3px rgba(255,255,255,1);
    }
    input[type="radio"]:focus + label:before {
        border-color: #9EA9B5;
    }
    input[type="radio"]:checked:focus + label:before {
        border-color: #21A4C7;
    }
    input[type="radio"]:disabled + label:before {
        background-color: $input-bg-disabled;
        border-color: #CFD2D5;
        cursor: $cursor-disabled;
    }
    input[type="checkbox"]:checked + label:before {
        font-family: 'ui-font-solid';
        font-size: 24px;
        line-height: .9;
        content: '\E435';
        color: #fff;
        background-color: #6CC5DC;
        border-color: #6CC5DC;
    }
    input[type="checkbox"]:focus + label:before {
        border-color: #9EA9B5;
    }
    input[type="checkbox"]:checked:focus + label:before {
        border-color: #21A4C7;
    }
    input[type="checkbox"]:disabled + label:before {
        background-color: $input-bg-disabled;
        border-color: #CFD2D5;
        cursor: $cursor-disabled;
    }

    /* _____ LAYOUT _____ */

    .mainContainer {
        @extend %clearfix;
        width: 100%;
        max-width: #{$containerWidth}px;
        margin: 0 auto;
    }

}
