/* _____ SPECIFICS _____ */

// import contextual entities
@import 'sample';
@import 'popovers';

.user-setup-status {
    display: inline-block;
    margin-left: 10px;
    [class^="icon-"], [class*=" icon-"] {
        margin-right: -2px;
        vertical-align: -2px;
    }
}

label.empty {
    // Custom checkboxes without labels dont need right margin
    &:before {
        margin-right: 0 !important;
    }
}

.table-no-results {
    font-style: italic;
    color: #999;
}

// utility class to make sure long table column content wraps to another line instead of breaking the table
.col-wrap {
    word-break: break-word;
    hyphens: auto;
}

.col-has-multiselect {
    padding-top: 4px !important;
    padding-bottom: 4px !important;
}

.col-edit {
    width: 80px;
    a {
        display: inline-block;
    }
}

.col-checkbox {
    width: 42px;
    padding-right: 0 !important;
}

.col-phone {
    width: 132px;
}

.disclaimer {
    font-style: italic;
    color: #999;
}

.parent-entity {
    font-style: italic;
    color: #ABABAB;
}

.belongs-to {
    font-style: italic;
    color: #999;
}

.permissions-list {
    @include remIt(font-size, 13);
    color: #908688;
    margin-top: 2px;
}

.permissions-teams-list {
    @include remIt(font-size, 13);
    margin-top: 2px;
    td {
        padding: 0;
        &:first-child {
            padding-right: 50px;
        }
    }
    .btn-icon {
        font-size: 18px;
        line-height: 1;
    }
}

.field-note {
    margin-left: 30px;
    .error-circle + & {
        margin-left: 12px;
    }
    // If validation error-circle is hidden, make it seem like it's still there (could also overwrite ng-hide on .error-circle and set visibility to hidden...)
    .error-circle.ng-hide + & {
        margin-left: 30px;
    }
    &.field-optional {
        color: $input-color-placeholder;
        font-style: italic;
        font-weight: 300;
    }
}

.info-circle,
.error-circle {
    margin-left: 4px;
}
.info-circle {
    color: $brand-secondary;
}

.role-error {
    display: inline-block;
    margin-bottom: 5px;
}

// Icon buttons next to headings
h1 .btn-icon, .h1 .btn-icon,
h2 .btn-icon, .h2 .btn-icon,
h3 .btn-icon, .h3 .btn-icon {
    vertical-align: baseline;
}
.btn-salesforce-update {
    font-size: 13px;
    vertical-align: baseline;
}
.btn-heading {
    font-size: 13px;
    vertical-align: baseline;
    line-height: 2;
    &.btn-heading-h1 {
        line-height: 2.5;
    }
}

.btn-cancel {
    .modal-footer &:only-child,
    .panel-footer &:only-child,
    .popover-footer &:only-child {
        padding-left: 0;
    }
    .modal-client-tags .modal-footer .btn.ng-hide + &, // unfortunately the ng-if technique here results in some scope issues
    .panel-footer .btn.ng-hide + & {
        padding-left: 0;
    }
}

// miscellaneous rules
.icon-size-xl { font-size: $font-size-h1; } // 24px
.icon-size-lg { font-size: $font-size-h2; } // 20px
.icon-size-md { font-size: 16px; } // 16px
.icon-size-sm { font-size: $font-size-h4; } // 12px

.has-input-icon {
    position: relative;
    .form-control {
        padding-left: $padding-base-horizontal + 24;
        &:focus ~ .input-icon {
            color: $brand-secondary;
        }
        // Change color of input icon when valid data has been entered
        &.ng-valid + .input-icon {
            color: $gray;
        }
    }
}
.input-icon {
    display: block;
    position: absolute;
    z-index: 3;
    top: 0;
    left: 0;
    font-size: 24px;
    color: #C7D0D8;
    margin: 7px $padding-base-horizontal - 2;
    transition: all 0.2s ease;
}

.has-input-icon-telephone { }
.has-input-icon-calendar {
    .form-control {
        padding-left: $padding-base-horizontal;
    }
    .input-icon {
        left: auto;
        right: 0;
    }
}
.has-input-icon-search {
    .form-control {
        transition: padding 0.3s ease-in-out;
        + .input-icon {
            color: #C7D0D8 !important; // search icon should always be light gray
        }
        &:focus {
            padding-left: $padding-base-horizontal;
            + .input-icon {
                opacity: 0;
                //display: none;
            }
            + .input-group-btn {
                //display: inline-block;
                //visibility: visible;
            }
        }
    }
    .input-group-btn {
        //display: none;
        //visibility: hidden;
    }
}

// Make sure checkboxes and radios within tables don't get the margins
td {
    .radio,
    .checkbox {
        margin-top: 0;
        margin-bottom: 0;
        input[type="checkbox"] + label:before,
        input[type="radio"] + label:before {
            margin-right: 0;
        }
    }
}

.typeahead-search {
    + .dropdown-menu {
        width: 100%;
    }
}

.panel-title {
    .icon-caret-right {
        display: inline-block; // so our transform below will work
        font-size: 24px;
        line-height: 1;
        transition: all 0.2s ease-in;
    }
    .btn-icon {
        font-size: 24px;
        line-height: 1;
    }
}
.panel-open {
    .panel-title .icon-caret-right {
        // Change the caret when panel is opened
        transform: rotate(90deg);
    }
}

.role-group-create {
    .form-control {
        width: 93%;
    }
    // cancel button
    .btn-icon {
        font-size: 12px; // small button text
        line-height: 1.5;
        padding-left: 5px;
        padding-right: 5px;
    }
}


[ng-click],
[data-ng-click],
[x-ng-click] {
    cursor: pointer;
}

.search-spinner {
    display: inline-block;
    background: url(/images/search_spinner.gif) no-repeat center center;
    background-size: 24px 24px;
    margin-left: 4px;
    margin-top: 4px;
    width: 28px;
    height: 24px;
    .typeahead & {
        top: 22px;
        font-size: 24px;
        margin: 14px 10px 0 0;
    }
}

.emmi-fade {
    opacity: 1;
    &.ng-enter {
        transition: opacity .25s ease-out;
        opacity: 0;
        &.ng-enter-active {
            opacity: 1;
        }
    }
    &.ng-leave {
        transition: opacity .25s ease-out;
        opacity: 1;
        &.ng-leave-active {
          opacity: 0;
        }
    }
}
.modal-backdrop.emmi-fade {
    background: rgba(0, 0, 0, 0.5);
}
 // Account for difference between Bootstrap Sass and the AngularStrap modal directive
.modal-backdrop {
    position: fixed;
    height: 100%;
    z-index: 1030;
}

.modal-confirm-exit {
    z-index: 1080;
    + .modal-backdrop {
        z-index: 1070;
    }
    .modal-dialog {
        max-width: 400px;
    }
    // We essentially put a popover inside a modal for this because of design
    .popover {
        position: relative;
        display: block;
        max-width: none;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    }
}

.modal-client-tags {
    .modal-dialog {
        width: 50%;
        margin-top: 150px;
    }
}

.btn-today {
  color: #000000;
  background-color: transparent;
  border-color: transparent;
}

.btn-today[disabled] {
  @extend .btn-today;
  color: #333;
}

/*.popover-text {
  font-size: 14px;
}*/

div.masked {
  position: relative;
  cursor: not-allowed;
}
div.masked:before {
  position:absolute;
  display:block;
  width: 100%;
  height: 100%;
  //background-color: $input-bg-disabled;
  //background-color: rgba(236, 237, 239, 0.4);
  background-color: transparent;
  background-color: rgba(255,255,255,0);
  z-index:100;
  border-radius: $border-radius-base;
}

.kill-grid-pad {
    padding-left: 0;
    padding-right: 0;
    //margin-left: $grid-gutter-width/-2;
    //@include make-md-column(6, 0);
}

hr.search-divider {
    margin: 6px 0 26px;
}

hr.role-divider {
    margin: 28px 0;
}

.table-search-filters {
    margin-bottom: 14px;
    .form-inline label {
        margin-right: 10px;
    }
}

.table-results-count {
    line-height: $input-height-small;
}

th.sort {
  cursor: pointer;
  .sort-icon {
    font-size: 18px;
    line-height: 10px;
    vertical-align: top;
    position: relative;
    top: 4px;
    margin-left: 3px;
  }
}

.rotate-90 {
    -webkit-transform: rotate(90deg);
    -moz-transform: rotate(90deg);
    -ms-transform: rotate(90deg);
    -o-transform: rotate(90deg);
    transform: rotate(90deg);
}

TR.nowrap TD, TH {
    white-space: nowrap;
}

.table-striped > tbody > tr.highlight > td, .highlight {
  background-color: yellow;
}

.pagination > .active > span {
    &:hover {
        color: darken(#428bca, 15%);
        background-color: lighten(#000, 93.5%); // #eee
        border-color: #ddd;
    }
    color: darken(#428bca, 15%);
    background-color: lighten(#000, 93.5%); // #eee
    border-color: #ddd;
}

/*
.conflictingTeamForm{
  width: 15em;
}

.conflictingTeamRow{
  font-size: 14px;
}
*/

.teamFilterSelect{
  padding-right: 0;
}

.pointer{
  cursor:pointer;
}

.entity-info {
    .entity-value-label {
        margin: 0 0 2px;
    }
    .entity-value {
        @include remIt(font-size, 16);
        margin: 0 0 15px;
    }
}

// various example component implementations
@include example();
@include example('.example2');
@include example('.example3', 'myHoverClass');
@include example('.example4', $param2: 'someParam', $hover: 'myHover');
@include example('.example5', $defaultSkin: false);
@include example-skin-alt('.example5');

.example6 {
    @include example2();
}
